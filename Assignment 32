Question 8: Create a simple Provider that provides a counter value and a button to increment the counter. Display the counter value in another widget.

source code:
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

void main() {
  runApp(
    ChangeNotifierProvider(
      create: (_) => CounterProvider(),
      child: MyApp(),
    ),
  );
}

// Provider class for counter
class CounterProvider with ChangeNotifier {
  int counter = 0;

  void increment() {
    counter++;
    notifyListeners();
  }
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: CounterPage(),
    );
  }
}

class CounterPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("Provider Counter Example")),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            // Widget to display counter value
            Consumer<CounterProvider>(
              builder: (context, counterProvider, child) {
                return Text(
                  "Counter: ${counterProvider.counter}",
                  style: TextStyle(fontSize: 30),
                );
              },
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                Provider.of<CounterProvider>(context, listen: false)
                    .increment();
              },
              child: Text("Increment Counter"),
            ),
          ],
        ),
      ),
    );
  }
}
